The ``add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.
First import ``factorial`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Test cases:

    >>> len(add_integer.__doc__) > 0
    True

    >>> len(__import__('0-add_integer').__doc__) > 0
    True

    >>> add_integer(1, 1)
    2

    >>> add_integer(1, -1)
    0

    >>> add_integer(-1, 1)
    0

    >>> add_integer(-1, -1)
    -2

    >>> add_integer(1, 1.98)
    2

    >>> add_integer(1.98, 1)
    2

    >>> add_integer(1.98, 1.98)
    2

    >>> add_integer(1.49, 1.50)
    2

    >>> add_integer(1.50, 1.51)
    2

    >>> add_integer(1.49, 1.49)
    2

    >>> add_integer(1.9999999999999999, 1)
    3

    >>> add_integer(1, 1.9999999999999999)
    3

    >>> add_integer(-1.999999999999999, 1.9999999999999999)
    1

    >>> add_integer(00001, 000001)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid token

    >>> add_integer(-0000001, -000001)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid token

    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(1)
    99

    >>> add_integer(-1)
    97

    >>> add_integer(0)
    98

    >>> add_integer(+0)
    98

    >>> add_integer(-0)
    98

    >>> add_integer(2)
    100

    >>> add_integer(-2)
    96

    >>> add_integer(10e10)
    100000000098

    >>> add_integer(-10e10)
    -99999999902

    >>> add_integer(10e1000)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(-10e1000)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(10e-1000)
    98

    >>> add_integer(-10e-1000)
    98

    >>> add_integer(-2)
    96

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('-inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(-)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid syntax

    >>> add_integer(+)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid syntax

    >>> add_integer('1')
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer("1")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer([])
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(())
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer({})
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer([1])
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer((1,))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer({'a':1})
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer([1, 2])
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer((1, 2))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(None, 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(1, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(1, float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(1, float('nan'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(1, '1')
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(1, "1")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(1, [1])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(1, (1,))
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(1, {})
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

